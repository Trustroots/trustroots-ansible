server {
    listen 80;
    listen [::]:80;

    server_name {{ nginx_hostname }};

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;

    ## Don't disclose server version
    server_tokens off;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ nginx_hostname }};

    ## Enable maintenance mode by uncommenting this
    #include /srv/configs/nginx-maintenance.conf;

    ## Maximum allowed size of the client request body,
    ## specified in the “Content-Length” request header field
    client_max_body_size 10M;

    ## Don't disclose server version
    server_tokens off;

    ## Letsencrypt acme challenge
    include /srv/configs/nginx-acme-challenge.conf;

    # SSL config generate from:
    # https://ssl-config.mozilla.org/#server=nginx&version=1.17.3&config=intermediate&openssl=1.0.2g&guideline=5.4

    ssl_certificate /etc/letsencrypt/live/{{ mailtrain_endpoint_public }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ mailtrain_endpoint_public }}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
    ssl_dhparam /etc/ssl/certs/trustroots_org_dhparam.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    ## This is already added at the Node app
    #add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/{{ mailtrain_endpoint_public }}/fullchain.pem;

    # Letsencrypt.org CertBot
    # To ensure that the directory is accessible to certbot for validation
    location ~ /.well-known {
        allow all;
    }

    ## Gzip Compression
    include /srv/configs/nginx-gzip.conf;

    location / {
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   Host $http_host;
        proxy_pass         http://127.0.0.1:{{ nginx_proxy_to_port }};
    }
}